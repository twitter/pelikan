on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
        profile: [ release, debug ]
    name: build-${{ matrix.os }}-${{ matrix.profile }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Update cargo flags
        if: ${{ matrix.profile == 'release' }}
        run: echo 'CARGO_FLAGS=--release' >> $GITHUB_ENV
        shell: bash
      - name: Update cargo flags
        if: ${{ matrix.profile == 'debug' }}
        run: echo 'CARGO_FLAGS=' >> $GITHUB_ENV
        shell: bash

      - uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.profile }}
      - uses: actions-rs/cargo@v1
        name: build
        with:
          command: test
          args: ${{ env.CARGO_FLAGS }} --workspace --all-features --tests --lib --bins --examples --no-run
      - uses: actions-rs/cargo@v1
        name: test
        with:
          command: test
          args: ${{ env.CARGO_FLAGS }} --workspace  --all-features --tests --lib --bins --examples
      - uses: actions-rs/cargo@v1
        if: ${{ matrix.profile == 'debug' }}
        name: doctests
        with:
          command: test
          args: ${{ env.CARGO_FLAGS }} --workspace --all-features --doc -- --test-threads 16

  bench-check:
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
    name: build-${{ matrix.os }}-bench
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Update cargo flags
        if: ${{ matrix.profile == 'release' }}
        run: echo 'CARGO_FLAGS=--release' >> $GITHUB_ENV
        shell: bash
      - name: Update cargo flags
        if: ${{ matrix.profile == 'debug' }}
        run: echo 'CARGO_FLAGS=' >> $GITHUB_ENV
        shell: bash

      - uses: Swatinem/rust-cache@v1
        with:
          key: bench
      - uses: actions-rs/cargo@v1
        name: build
        with:
          command: bench
          args: --workspace --no-run

  # Fast cargo check to ensure things compile
  check:
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-10.15 ]
    name: check-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # Note: We could run these using the pull_request_target trigger. I haven't
  #       done this since I'm not sure if it would be secure.
  #
  # See this link for more details on this
  # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
        with:
          key: clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  audit:
    name: audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
